// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetRestaurantsData, GetRestaurantsResponse, GetRestaurantsDishesData, GetRestaurantsDishesResponse } from './types.gen';

export class RestaurantsService {
    /**
     * Get restaurants matching query
     * Returns a list of restaurants matching the search query
     * @param data The data for the request.
     * @param data.query identifier of the restaurant
     * @param data.xRecaptchaToken
     * @returns unknown Restaurants found successfully
     * @throws ApiError
     */
    public static getRestaurants(data: GetRestaurantsData): CancelablePromise<GetRestaurantsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/restaurants',
            headers: {
                'X-Recaptcha-Token': data.xRecaptchaToken
            },
            query: {
                query: data.query
            },
            errors: {
                400: 'Bad request or no restaurants found',
                500: 'Server error'
            }
        });
    }
    
    /**
     * Find popular dishes from restaurant reviews
     * Analyzes restaurant reviews to identify the most popular dishes mentioned
     * @param data The data for the request.
     * @param data.query identifier of the restaurant
     * @param data.xRecaptchaToken
     * @returns unknown Popular dishes analysis completed successfully
     * @throws ApiError
     */
    public static getRestaurantsDishes(data: GetRestaurantsDishesData): CancelablePromise<GetRestaurantsDishesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/restaurants/dishes',
            headers: {
                'X-Recaptcha-Token': data.xRecaptchaToken
            },
            query: {
                query: data.query
            },
            errors: {
                400: 'Bad request or analysis error',
                500: 'Server error'
            }
        });
    }
    
}